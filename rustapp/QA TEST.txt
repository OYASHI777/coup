2024-05-09T16:12:00 [INFO] - Public Constraint HM: {4: Ambassador, 2: Assassin, 5: Captain}
2024-05-09T16:12:00 [INFO] - Joint Constraint HM: {}
2024-05-09T16:12:00 [INFO] - Group Constraint VEC: [
    GroupConstraint { participation_list: [1, 1, 0, 0, 1, 0, 1], card: Ambassador, count_dead: 1, count_alive: 2, count: 3 }, 
    GroupConstraint { participation_list: [0, 1, 0, 0, 1, 0, 1], card: Ambassador, count_dead: 1, count_alive: 1, count: 2 }, 
    GroupConstraint { participation_list: [0, 1, 0, 0, 1, 0, 1], card: Duke, count_dead: 0, count_alive: 2, count: 2 }, 
    GroupConstraint { participation_list: [0, 1, 0, 0, 1, 0, 1], card: Assassin, count_dead: 0, count_alive: 1, count: 1 }, 
    GroupConstraint { participation_list: [0, 1, 0, 0, 0, 1, 1], card: Contessa, count_dead: 0, count_alive: 2, count: 2 }, 
    GroupConstraint { participation_list: [0, 1, 0, 0, 0, 0, 1], card: Captain, count_dead: 0, count_alive: 1, count: 1 }]
2024-05-09T16:12:00 [INFO] - Choice: Discard { player_id: 4, card: [Contessa, Contessa], no_cards: 1 }
2024-05-09T16:12:00 [INFO] - Verdict: Legal Wrong
2024-05-09T16:12:00 [INFO] - 
2024-05-09T16:12:00 [INFO] - Calculated_State: ["ACBDBBDEAACECDE", "ACDEBBDEAACEBCD", "AEABBBCDADCECDE", "ADCEBCBEADCEABD", "ACBDBDBEAACECDE", "ACCDBBDEABCEADE", "ABBCBDCEADCEADE", "ACDEBEBDADCEABC", "ADADBCBEABCECDE", "ADBDBEBCAACECDE", "ACABBDBEADCECDE", "ACADBBDEADCEBCE", "ACCEBEBDABCEADD", "ABADBCDEABCECDE", "ACCEBBDEAACEBDD", "AEAEBBCDADCEBCD", "ABCEBECDADCEABD", "ADBCBBCEADCEADE", "ADCEBBCEAACEBDD", "ADDEBEBCAACEBCD", "ACACBDBEADCEBDE", "AECDBBCDABCEADE", "ADBEBEBCAACECDD", "ADBDBCBEADCEACE", "ABBCBECDADCEADE", "ACCEBBDEABCEADD", "ACDEBBDEADCEABC", "ABABBECDADCECDE", "ACADBBDEABCECDE", "ACCDBDBEADCEABE", "AECDBBCDADCEABE", "ABCDBCDEADCEABE", "AEDEBDBCABCEACD", "ABAEBDCEABCECDD", "ACBCBBDEAACEDDE", "AEADBCBDABCECDE", "ABDDBECDABCEACE", "AEDEBCBDAACEBCD", "ACCDBEBDABCEADE", "AEACBCBDADCEBDE", "ADCDBCBEAACEBDE", "ADCDBCBEABCEADE", "ACBEBDBEAACECDD", "ADBDBCBEAACECDE", "ABDDBCDEABCEACE", "ACADBDBEABCECDE", "ACBEBBDEADCEACD", "ADAEBCBEABCECDD", "ABCEBCDEADCEABD", "ADCEBEBCABCEADD", "ADADBBCEABCECDE", "AEAEBCBDABCECDD", "ADADBBCEADCEBCE", "AEBEBBCDADCEACD", "ACACBEBDABCEDDE", "ADAEBCBEADCEBCD", "ACDEBEBDAACEBCD", "AEDDBCBDAACEBCE", "ADBCBBCEAACEDDE", "ABBDBCDEAACECDE", "ACCEBDBEAACEBDD", "ABBCBCDEAACEDDE", "ACDDBBDEABCEACE", "ACDEBDBEADCEABC", "ABCDBDCEADCEABE", "AEBDBBCDAACECDE", "ACBEBDBEADCEACD", "ADDEBBCEADCEABC", "AEDDBDBCAACEBCE", "ABBDBDCEAACECDE", "ADACBEBCADCEBDE", "ADAEBBCEADCEBCD", "ADBCBEBCAACEDDE", "ABCEBCDEAACEBDD", "AEACBBCDADCEBDE", "AEBEBBCDAACECDD", "ACDEBDBEAACEBCD", "ABCEBDCEAACEBDD", "ABADBCDEADCEBCE", "ACABBBDEADCECDE", "ACBCBEBDADCEADE", "ADAEBBCEABCECDD", "ADDEBCBEADCEABC", "ACABBEBDADCECDE", "ADCDBBCEADCEABE", "ACBCBDBEADCEADE", "ACAEBEBDABCECDD", "ADABBBCEADCECDE", "AEDEBDBCADCEABC", "ADACBBCEADCEBDE", "AEBEBDBCADCEACD", "ACACBEBDADCEBDE", "ABDEBECDAACEBCD", "ACADBEBDADCEBCE", "AEADBCBDADCEBCE", "ABBDBECDADCEACE", "ADBCBEBCADCEADE", "AEDDBCBDABCEACE", "ACAEBBDEADCEBCD", "ABCDBDCEABCEADE", "AECDBCBDAACEBDE", "ADCDBBCEABCEADE", "ACCEBBDEADCEABD", "ABAEBDCEADCEBCD", "ACAEBDBEADCEBCD", "ACBEBEBDADCEACD", "ABCEBDCEADCEABD", "ADDDBEBCAACEBCE", "AEDEBCBDABCEACD", "ADCDBCBEADCEABE", "AECEBCBDABCEADD", "ABADBECDABCECDE", "ADCEBCBEAACEBDD", "AECDBDBCABCEADE", "ACCEBDBEABCEADD", "AEBDBDBCADCEACE", "ABDEBCDEAACEBCD", "ADAEBEBCABCECDD", "AEAEBBCDABCECDD", "ABADBDCEABCECDE", "ADDEBBCEAACEBCD", "AEABBCBDADCECDE", "ACBCBBDEADCEADE", "ACDEBDBEABCEACD", "ADACBEBCABCEDDE", "ADBCBCBEAACEDDE", "AECDBBCDAACEBDE", "AEADBBCDABCECDE", "AEBCBCBDAACEDDE", "ADBEBEBCADCEACD", "ADCEBBCEADCEABD", "ACCDBDBEAACEBDE", "ADDDBCBEABCEACE", "AECEBBCDAACEBDD", "AEDDBBCDAACEBCE", "ADDDBEBCABCEACE", "AEBCBBCDAACEDDE", "ABACBCDEABCEDDE", "ADBEBCBEADCEACD", "ADCDBEBCABCEADE", "ADDDBBCEAACEBCE", "AEAEBDBCADCEBCD", "ADBEBBCEADCEACD", "ABDEBDCEADCEABC", "ACAEBDBEABCECDD", "ADACBCBEADCEBDE", "AEBEBCBDADCEACD", "ABCDBECDADCEABE", "ADACBBCEABCEDDE", "AEBDBCBDADCEACE", "ABBEBDCEAACECDD", "AEBEBCBDAACECDD", "ACCEBEBDADCEABD", "ACCDBEBDAACEBDE", "ADBDBBCEAACECDE", "ABBDBCDEADCEACE", "ADDEBBCEABCEACD", "ADCDBEBCAACEBDE", "ACCEBEBDAACEBDD", "ABBDBECDAACECDE", "ACDDBDBEAACEBCE", "ABBEBCDEADCEACD", "ABCDBECDABCEADE", "AEACBCBDABCEDDE", "AEDEBBCDADCEABC", "AEDDBDBCABCEACE", "AEDEBBCDAACEBCD", "ABACBECDABCEDDE", "ABCEBECDABCEADD", "ADCEBEBCAACEBDD", "ACCDBBDEAACEBDE", "ABAEBECDADCEBCD", "ACBCBEBDAACEDDE", "ABDEBCDEABCEACD", "AEADBDBCABCECDE", "ABADBECDADCEBCE", "AECEBDBCAACEBDD", "ACAEBBDEABCECDD", "ACBCBDBEAACEDDE", "ABBEBECDAACECDD", "AEACBDBCABCEDDE", "ADBDBBCEADCEACE", "ABAEBCDEABCECDD", "ABAEBCDEADCEBCD", "ABDEBECDABCEACD", "ADCEBBCEABCEADD", "AEAEBCBDADCEBCD", "ABABBCDEADCECDE", "AEDDBBCDABCEACE", "ACDDBBDEAACEBCE", "ACBDBBDEADCEACE", "AEBEBDBCAACECDD", "ADDEBEBCADCEABC", "ACADBDBEADCEBCE", "ACACBBDEABCEDDE", "ADBCBCBEADCEADE", "AEDEBBCDABCEACD", "AECEBCBDADCEABD", "ABACBECDADCEBDE", "ACACBDBEABCEDDE", "ACACBBDEADCEBDE", "ABABBDCEADCECDE", "ABDDBDCEABCEACE", "AEDEBDBCAACEBCD", "ACCDBBDEADCEABE", "ABCEBCDEABCEADD", "ACDEBEBDABCEACD", "ADBEBCBEAACECDD", "ABBEBDCEADCEACD", "ACDDBEBDAACEBCE", "ADACBCBEABCEDDE", "ADDEBCBEAACEBCD", "ABDDBCDEAACEBCE", "ACBDBEBDAACECDE", "ACBDBEBDADCEACE", "ACAEBEBDADCEBCD", "ADABBCBEADCECDE", "ABCEBECDAACEBDD", "ABCEBDCEABCEADD", "ABBCBCDEADCEADE", "ADBEBBCEAACECDD", "AEBDBCBDAACECDE", "AECDBDBCAACEBDE", "ABAEBECDABCECDD", "AECDBDBCADCEABE", "ACDDBDBEABCEACE", "ABCDBCDEABCEADE", "AEBDBDBCAACECDE", "ACBDBDBEADCEACE", "AEBCBBCDADCEADE", "AECDBCBDABCEADE", "ABDDBECDAACEBCE", "ABCDBCDEAACEBDE", "ADDEBEBCABCEACD", "AECEBCBDAACEBDD", "ACBEBEBDAACECDD", "AECEBBCDADCEABD", "AECEBBCDABCEADD", "ACCDBEBDADCEABE", "ABACBDCEABCEDDE", "ADCDBBCEAACEBDE", "ACBEBBDEAACECDD", "ACCEBDBEADCEABD", "ACADBEBDABCECDE", "ADAEBEBCADCEBCD", "AEADBDBCADCEBCE", "ADDEBCBEABCEACD", "ACDDBEBDABCEACE", "AEBCBCBDADCEADE", "ADCDBEBCADCEABE", "ABDEBECDADCEABC", "ADCEBEBCADCEABD", "ABBEBECDADCEACD", "AEAEBDBCABCECDD", "ADADBCBEADCEBCE", "AEACBBCDABCEDDE", "ABADBDCEADCEBCE", "ABBEBCDEAACECDD", "AECEBDBCADCEABD", "ACCDBDBEABCEADE", "ABDEBCDEADCEABC", "AECEBDBCABCEADD", "ADCEBCBEABCEADD", "AEABBDBCADCECDE", "ABCDBECDAACEBDE", "AEADBBCDADCEBCE", "ABDEBDCEAACEBCD", "ADDDBCBEAACEBCE", "AEBCBDBCADCEADE", "ABCDBDCEAACEBDE", "ABACBDCEADCEBDE", "AEBDBBCDADCEACE", "ADADBEBCADCEBCE", "AEACBDBCADCEBDE", "ADBDBEBCADCEACE", "ABDDBDCEAACEBCE", "AEBCBDBCAACEDDE", "ACDEBBDEABCEACD", "AEDEBCBDADCEABC", "ADADBEBCABCECDE", "AECDBCBDADCEABE", "ADDDBBCEABCEACE", "ADABBEBCADCECDE", "ABBDBDCEADCEACE", "ABBCBECDAACEDDE", "ABACBCDEADCEBDE", "ABDEBDCEABCEACD", "ABBCBDCEAACEDDE"]

[0, 1, 0, 0, 0, 0, 1] at least 1 Amb at least 1 Duke at least 1 Cont
[0, 1, 0, 0, 0, 0, 1] Cap 1, Amb 1, Duke 1, Cont 1

[0, 1, 0, 0, 1, 0, 1] Amb dead 1 Amb Alive 1, Duke Alive 2, Assassin Alive 1, Cont 1 Alive, Capt 1 Alive

When you subtract above you find it cannot be contessa! But only known through inferred_group!
Maybe consider if inferred_group helps here?